#!/bin/bash
set -e
BASEDIR=$(dirname $0)
source $BASEDIR/inc_msg.sh
function print_usage() {
cat << EOF
Usage: $(basename $0) [OPTIONS] [list of filenames for new scripts]
Valid options are:
    -a
        Adds abort function
    -b 
        Initialize edrtools BASEDIR variable
    -d
        Include dependency checking functions
    -l
        Include lock file mechanism functions
    -m
        Include message printing functions
    -o
        Adds options parser
    -p
        Adds print_usage function
EOF
}

if [ "x$1" == "x-h" ];then
    print_usage
    exit 0
fi

while [ $# -gt 0 ];do
    case "$1" in
        '-a')
            INC_ABORT="y"
            shift
            continue
            ;;
        '-b')
            INC_BASEDIR="y"
            shift
            continue
            ;;
        '-d')
            INC_DEPENDENCIES="y"
            shift
            continue
            ;;
        '-l')
            INC_LOCK="y"
            shift
            continue
            ;;
        '-m')
            INC_MSG="y"
            shift
            continue
            ;;
        '-o')
            INC_OPT_PARSER="y"
            shift
            continue
            ;;
        '-p')
            INC_PRINT_USAGE="y"
            shift
            continue
            ;;
    esac
    NEWSCRIPT=$1
    [ -z $NEWSCRIPT ] && exit
    if [ ! -f $NEWSCRIPT ];then
        echo '#!/bin/bash' > $NEWSCRIPT
        echo 'set -e' >> $NEWSCRIPT
        [ "x$INC_BASEDIR" == "xy" ] && echo "BASEDIR=\$(dirname \$0)" >> $NEWSCRIPT
        [ "x$INC_DEPENDENCIES" == "xy" ] && echo "source \$BASEDIR/inc_dependencies.sh" >> $NEWSCRIPT
        [ "x$INC_LOCK" == "xy" ] && echo "source \$BASEDIR/inc_lock.sh" >> $NEWSCRIPT
        [ "x$INC_MSG" == "xy" ] && echo "source \$BASEDIR/inc_msg.sh" >> $NEWSCRIPT
        if [ "x$INC_PRINT_USAGE" == "xy" ]; then
		    cat >> $NEWSCRIPT << "OEOF"
function print_usage(){
    cat << EOF
OEOF
            if [ "x$INC_OPT_PARSER" == "xy" ]; then
                cat >> $NEWSCRIPT << "OEOF"
Usage: $(basename $0) [OPTIONS]

Options:
    --:
        Stop processing any further options

    -d,--debug:
        Run script in debugging mode

    -h,--help:
        Print this help
OEOF
            else
                echo 'Usage: $(basename $0)' >> $NEWSCRIPT
            fi
            echo "EOF" >> $NEWSCRIPT
            echo "}" >> $NEWSCRIPT
        fi
        if [ "x$INC_ABORT" == "xy" ]; then
            echo "function abort(){" >> $NEWSCRIPT
            echo '    echo "Error: $@" >&2' >> $NEWSCRIPT
            [ "x$INC_PRINT_USAGE" == "xy" ] && echo "    print_usage" >> $NEWSCRIPT
            echo "    exit -1" >> $NEWSCRIPT
            echo "}" >> $NEWSCRIPT
        fi
        if [ "x$INC_PRINT_USAGE" == "xy" ]; then
            cat >> $NEWSCRIPT << "OEOF"
if [ "x$1" == "x-h" ] || [ "x$1" == "x--help" ];then
    print_usage
    exit 0
fi
OEOF
        fi
        if [ "x$INC_OPT_PARSER" == "xy" ]; then
            cat >> $NEWSCRIPT << "OEOF"
ARGS=""
while [ $# -gt 0 ];do
    if [ "x$NO_OPTS" == "xy" ] && [[ "$1" =~ \-.* ]];then
        ARGS+="$1 "
    else
        case $1 in 
            '--')
                NO_OPTS="y"
                ;;
            '-d'|'--debug')
                set -xe
                ;;
            '-h'|'--help')
                print_usage
                exit 0
                ;;
            *)
                ARGS+="$1 "
                ;;
        esac
    fi
    shift
done
OEOF
        fi
        chmod +x $NEWSCRIPT
    fi
    ${EDITOR:-vi} $NEWSCRIPT 
    shift
done
