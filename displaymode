#!/bin/bash
BASEDIR=$(dirname $0)
source $BASEDIR/inc_msg.sh

function list_devices(){
    xrandr | grep " connected" | cut -d' ' -f 1
}
function get_device(){
    index=$1
    list_devices | head -n $index | tail -n 1
}
function print_usage {
    echo "Usage: `basename $0` <mode> [res1 [res2]]";
    echo "    where: mode = (single|dual|left|right)";
    echo "           res1 = resolution of primary display";
    echo "           res2 = resolution of secondary";
}
if [ "x$1" == "x-h" ]; then
    printf "Finds the first two displays from xrandr output and sets them according to the MODE parameter.\n\n"
    print_usage
    exit 0
fi
MODE=$1
RES1=$2
RES2=$3
[ -z $MODE ] && abort $(print_usage)

RES1_ARG="--auto"
RES2_ARG="--auto"
if [ "x${RES1}" != "x" ];then
    RES1_ARG="--mode ${RES1}"
    if [ "x${RES2}" != "x" ];then
        RES2_ARG="--mode ${RES2}"
    fi
fi

PRIMARY=$(get_device 1)
SECONDARY=$(get_device 2)
echo "Primary display device: $PRIMARY"
echo "Secondary display device: $SECONDARY"

if [ $MODE == "single" ];then
	xrandr  --output $PRIMARY ${RES1_ARG} --output $SECONDARY --off
elif [ "$MODE" == "left" ]; then
	xrandr  --output $SECONDARY ${RES2_ARG} --output $PRIMARY ${RES1_ARG} --right-of $SECONDARY;
elif [ "$MODE" == "right" ]; then
	xrandr  --output $SECONDARY ${RES2_ARG} --output $PRIMARY ${RES1_ARG} --left-of $SECONDARY;
elif [ "$MODE" == "dual" ]; then
	xrandr  --output $SECONDARY ${RES2_ARG} --output $PRIMARY ${RES1_ARG} --same-as $SECONDARY;
else
	quit;
fi

# The below block tries to do "smart" things that I found to be helpful
# You may want to remove it / comment it out
if [ $? -eq '0' ]; then
	# reload fluxbox configuration
    [ -n "$(pgrep fluxbox)" ] && fluxbox-remote > /dev/null 2>&1 && fluxbox-remote "Restart"
	# restart conky
    [ -n "$(pgrep conky)" ] && killall -SIGUSR1 conky
fi
