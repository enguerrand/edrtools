#!/bin/bash
set -e
BASEDIR=$(dirname $0)
source $BASEDIR/inc_dependencies.sh
set_dependencies dhcpcd ip iw wpa_passphrase wpa_supplicant
function print_usage(){
    cat <<- EOF
	Usage: $(basename $0) [OPTIONS] [SSID]

	If SSID is not provided a multiple choice dialog will allow you to select one.

	Options:
	    --:
	        Stop processing any further options

	    -c,--config
	        Only print generated wpa_supplicant config
	        instead of running wpa_supplicant
            Also see -n

	    -d,--debug:
	        Run script in debugging mode

	    -D,--driver
	        Use driver provided as next argument

	    -h,--help:
	        Print this help

	    -i,--iface
	        Use interface provided as next argument

	    -n,--network
	        Only print network section of  generated wpa_supplicant
	        config instead of running wpa_supplicant

	    -p,--passphrase
	        Use passphrase provided as next argument

	    -x,--exit
	        Disconnect wifi. Leads to all other options
	        except -d being ignored

	EOF
    print_dependencies
}
if [ "x$1" == "x-h" ] || [ "x$1" == "x--help" ];then
    print_usage
    exit 0
fi

function print_reachable_ssids(){
    local _iface=$1
    iw dev ${_iface} scan ap-force | grep -o "SSID: .*" | cut -d":" -f 2 | tr -d ' '
}


function auto_detect_iface(){
    iw dev | grep Interface | sed -e 's/.*Interface \(.*\)/\1/' | head -n 1
}

function print_network(){
	local _ssid=$1
	local _psk=$2
    if [ -z "${_psk}" ];then
		cat <<- EOF
		network={
		    ssid="${_ssid}"
		}
		EOF
    else
	    wpa_passphrase ${_ssid} ${_psk} | grep -v "#psk"
    fi
}

function print_wpa_config(){
	local _ssid=$1
	local _psk=$2
	cat <<- EOF
	# /etc/wpa_supplicant/wpa_supplicant.conf
	ctrl_interface=/run/wpa_supplicant
	ctrl_interface_group=wheel
	eapol_version=1
	ap_scan=1
	fast_reauth=1
	update_config=1

	# networks
	EOF
    print_network ${_ssid} ${_psk}
}

while [ $# -gt 0 ];do
    if [ "x$NO_OPTS" == "xy" ] && [[ "$1" =~ \-.* ]];then
        ARGS+="$1 "
    else
        case $1 in 
            '--')
                NO_OPTS="y"
                ;;
            '-c'|'--config')
                CONFIG_ONLY="y"
                ;;
            '-d'|'--debug')
                set -xe
                ;;
            '-D'|'--driver')
                shift
                DRIVER=$1
                ;;
            '-h'|'--help')
                print_usage
                exit 0
                ;;
            '-i'|'--iface')
                shift
                IFACE=$1
                ;;
            '-n'|'--network')
                NETWORK_ONLY="y"
                ;;
            '-p'|'--passphrase')
                shift
                PASSWORD=$1
                ;;
            '-x'|'--exit')
                killall wpa_supplicant
                exit 0
                ;;
            *)
                [ -z "${SSID}" ] || abort "Too many parameters!"
                SSID="$1"
                ;;
        esac
    fi
    shift
done
if [ -z "${IFACE}" ];then
    IFACE=$(auto_detect_iface)
    [ -z "${IFACE}" ] && abort "No wireless-capable network interface found!"
    echo "Interface name not provided. Autodetected ${IFACE}"
fi
ip link set ${IFACE} up || abort "Could not bring up interface ${IFACE}"
if [ -z "${SSID}" ]; then
    echo "Select wifi network to connect to:"
    select SSID in $(print_reachable_ssids ${IFACE}); do
        [ -z "${SSID}" ] || break
        echo "Invalid choice" >&2
    done
fi
[ -z "${SSID}" ] && abort "No SSID provided"
[ -z "${PASSWORD}" ] && read -p "Passphrase for ${SSID} [None]: " PASSWORD
if [ -n "${NETWORK_ONLY}" ]; then
    echo " "
    print_network ${SSID} ${PASSWORD}
    exit 0
fi
if [ -n "${CONFIG_ONLY}" ]; then
    echo " "
    print_wpa_config ${SSID} ${PASSWORD}
    exit 0
fi
DRIVER_ARG=""
[ -n "${DRIVER}" ] && DRIVER_ARG="-D ${DRIVER}"
wpa_supplicant -B -i ${IFACE} -c <(print_wpa_config ${SSID} ${PASSWORD}) ${DRIVER_ARG}
dhcpcd
